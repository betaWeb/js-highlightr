!function(t){var e={};function r(i){if(e[i])return e[i].exports;var n=e[i]={i:i,l:!1,exports:{}};return t[i].call(n.exports,n,n.exports,r),n.l=!0,n.exports}r.m=t,r.c=e,r.d=function(t,e,i){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(r.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var n in t)r.d(i,n,function(e){return t[e]}.bind(null,n));return i},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=0)}([function(t,e,r){t.exports=r(1)},function(t,e,r){const i=r(2);String.prototype.highlight||(String.prototype.highlight=function(t,e={}){return new i(e).highlight(this,t)}),Array.prototype.highlightMany||(Array.prototype.highlightMany=function(t,e={}){return new i(e).highlightMany(this,t)}),Node.prototype.highlight||(Node.prototype.highlight=function(t,e={}){const r=new i(e);return this.innerHTML=r.highlight(this.innerText,t),this})},function(t,e,r){const i=r(3);t.exports=i},function(t,e){t.exports=class{constructor(t={}){this.setOptions(t)}highlight(t,e){if(!t||!t.length)return"";if(e&&e.length){let r=this._prepare(e.trim());return r.length?1===r.length||r.length>1&&this._belongsToContext(e,t)?this._highlightWord(t,e):r.reduce(this._highlightWord.bind(this),t):t}return t}highlightMany(t,e){if(!t||!Array.isArray(t))throw new Error("Highlight::highlightMany - contextArray parameter must be of type array");return t.reduce((t,r)=>(t.push(this.highlight(r,e)),t),[])}setOptions(t={}){this._params={html_attrs:{},html_tag:"span",css_classes:"search__highlight",regexp:"__exp__",regexp_flags:"gi",word_min_length:2,...t}}_prepare(t){return(t.constructor===String?t.split(" "):t).filter((t,e,r)=>r.indexOf(t)===e).filter(t=>t.length>this._params.word_min_length).map(t=>t.trim())}_highlightWord(t,e,r=0){return t.replace(this._buildRegExp(e),this._buildTemplate(e,r))}_belongsToContext(t,e){return new RegExp(t,"gi").test(e)}_buildRegExp(t){return new RegExp(this._params.regexp.replace("__exp__",t),this._params.regexp_flags)}_buildTemplate(t,e){return`<${this._params.html_tag} class="${this._params.css_classes}" ${this._buildAttrs()} data-highlight="hl_${e+1}">${t}</${this._params.html_tag}>`}_buildAttrs(){if(!Object.keys(this._params.html_attrs).length)return" ";let t=[""];for(let e in this._params.html_attrs)this._params.html_attrs.hasOwnProperty(e)&&t.push(`${e}="${this._params.html_attrs[e]}"`);return t.join(" ")}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vYnJvd3Nlci5qcyIsIndlYnBhY2s6Ly8vLi9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXguanMiXSwibmFtZXMiOlsiaW5zdGFsbGVkTW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJpIiwibCIsIm1vZHVsZXMiLCJjYWxsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJIaWdobGlnaHQiLCJTdHJpbmciLCJoaWdobGlnaHQiLCJzZWFyY2hhYmxlIiwib3B0aW9ucyIsInRoaXMiLCJBcnJheSIsImhpZ2hsaWdodE1hbnkiLCJOb2RlIiwiX2luc3RhbmNlIiwiaW5uZXJIVE1MIiwiaW5uZXJUZXh0IiwiSGlnaGxpZ2h0ZXIiLCJbb2JqZWN0IE9iamVjdF0iLCJzZXRPcHRpb25zIiwiY29udGV4dCIsImxlbmd0aCIsInBhcnRzIiwiX3ByZXBhcmUiLCJ0cmltIiwiX2JlbG9uZ3NUb0NvbnRleHQiLCJfaGlnaGxpZ2h0V29yZCIsInJlZHVjZSIsImNvbnRleHRBcnJheSIsImlzQXJyYXkiLCJFcnJvciIsImFjYyIsInB1c2giLCJfcGFyYW1zIiwiaHRtbF9hdHRycyIsImh0bWxfdGFnIiwiY3NzX2NsYXNzZXMiLCJyZWdleHAiLCJyZWdleHBfZmxhZ3MiLCJ3b3JkX21pbl9sZW5ndGgiLCJjb25zdHJ1Y3RvciIsInNwbGl0IiwiZmlsdGVyIiwidiIsImluZGV4T2YiLCJtYXAiLCJ3b3JkIiwiaW5kZXgiLCJyZXBsYWNlIiwiX2J1aWxkUmVnRXhwIiwiX2J1aWxkVGVtcGxhdGUiLCJSZWdFeHAiLCJ0ZXN0IiwiX2J1aWxkQXR0cnMiLCJrZXlzIiwiX2F0dHJzIiwiam9pbiJdLCJtYXBwaW5ncyI6ImFBQ0EsSUFBQUEsRUFBQSxHQUdBLFNBQUFDLEVBQUFDLEdBR0EsR0FBQUYsRUFBQUUsR0FDQSxPQUFBRixFQUFBRSxHQUFBQyxRQUdBLElBQUFDLEVBQUFKLEVBQUFFLEdBQUEsQ0FDQUcsRUFBQUgsRUFDQUksR0FBQSxFQUNBSCxRQUFBLElBVUEsT0FOQUksRUFBQUwsR0FBQU0sS0FBQUosRUFBQUQsUUFBQUMsSUFBQUQsUUFBQUYsR0FHQUcsRUFBQUUsR0FBQSxFQUdBRixFQUFBRCxRQUtBRixFQUFBUSxFQUFBRixFQUdBTixFQUFBUyxFQUFBVixFQUdBQyxFQUFBVSxFQUFBLFNBQUFSLEVBQUFTLEVBQUFDLEdBQ0FaLEVBQUFhLEVBQUFYLEVBQUFTLElBQ0FHLE9BQUFDLGVBQUFiLEVBQUFTLEVBQUEsQ0FBMENLLFlBQUEsRUFBQUMsSUFBQUwsS0FLMUNaLEVBQUFrQixFQUFBLFNBQUFoQixHQUNBLG9CQUFBaUIsZUFBQUMsYUFDQU4sT0FBQUMsZUFBQWIsRUFBQWlCLE9BQUFDLFlBQUEsQ0FBd0RDLE1BQUEsV0FFeERQLE9BQUFDLGVBQUFiLEVBQUEsY0FBaURtQixPQUFBLEtBUWpEckIsRUFBQXNCLEVBQUEsU0FBQUQsRUFBQUUsR0FFQSxHQURBLEVBQUFBLElBQUFGLEVBQUFyQixFQUFBcUIsSUFDQSxFQUFBRSxFQUFBLE9BQUFGLEVBQ0EsS0FBQUUsR0FBQSxpQkFBQUYsUUFBQUcsV0FBQSxPQUFBSCxFQUNBLElBQUFJLEVBQUFYLE9BQUFZLE9BQUEsTUFHQSxHQUZBMUIsRUFBQWtCLEVBQUFPLEdBQ0FYLE9BQUFDLGVBQUFVLEVBQUEsV0FBeUNULFlBQUEsRUFBQUssVUFDekMsRUFBQUUsR0FBQSxpQkFBQUYsRUFBQSxRQUFBTSxLQUFBTixF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NkIxQixLQUFBMkMsb0NBQXlDTixFQUFBLE1BQWNELE1BQVNwQyxLQUFBdUIsUUFBQUUsWUFTaEpqQixjQUNBLElBQUFuQyxPQUFBdUUsS0FBQTVDLEtBQUF1QixRQUFBQyxZQUFBYixPQUFBLFVBQ0EsSUFBQWtDLEVBQUEsS0FDQSxRQUFBbEYsS0FBQXFDLEtBQUF1QixRQUFBQyxXQUNBeEIsS0FBQXVCLFFBQUFDLFdBQUFoQyxlQUFBN0IsSUFDQWtGLEVBQUF2QixRQUErQjNELE1BQU1xQyxLQUFBdUIsUUFBQUMsV0FBQTdELE9BR3JDLE9BQUFrRixFQUFBQyxLQUFBIiwiZmlsZSI6ImhpZ2hsaWdodHIubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDApO1xuIiwiY29uc3QgSGlnaGxpZ2h0ID0gcmVxdWlyZSgnLi9pbmRleCcpXG5cbmlmICghU3RyaW5nLnByb3RvdHlwZS5oaWdobGlnaHQpIHtcbiAgICBTdHJpbmcucHJvdG90eXBlLmhpZ2hsaWdodCA9IGZ1bmN0aW9uIChzZWFyY2hhYmxlLCBvcHRpb25zID0ge30pIHtcbiAgICAgICAgY29uc3QgX2luc3RhbmNlID0gbmV3IEhpZ2hsaWdodChvcHRpb25zKVxuICAgICAgICByZXR1cm4gX2luc3RhbmNlLmhpZ2hsaWdodCh0aGlzLCBzZWFyY2hhYmxlKVxuICAgIH1cbn1cblxuaWYgKCFBcnJheS5wcm90b3R5cGUuaGlnaGxpZ2h0TWFueSkge1xuICAgIEFycmF5LnByb3RvdHlwZS5oaWdobGlnaHRNYW55ID0gZnVuY3Rpb24gKHNlYXJjaGFibGUsIG9wdGlvbnMgPSB7fSkge1xuICAgICAgICBjb25zdCBfaW5zdGFuY2UgPSBuZXcgSGlnaGxpZ2h0KG9wdGlvbnMpXG4gICAgICAgIHJldHVybiBfaW5zdGFuY2UuaGlnaGxpZ2h0TWFueSh0aGlzLCBzZWFyY2hhYmxlKVxuICAgIH1cbn1cblxuaWYgKCFOb2RlLnByb3RvdHlwZS5oaWdobGlnaHQpIHtcbiAgICBOb2RlLnByb3RvdHlwZS5oaWdobGlnaHQgPSBmdW5jdGlvbiAoc2VhcmNoYWJsZSwgb3B0aW9ucyA9IHt9KSB7XG4gICAgICAgIGNvbnN0IF9pbnN0YW5jZSA9IG5ldyBIaWdobGlnaHQob3B0aW9ucylcbiAgICAgICAgdGhpcy5pbm5lckhUTUwgPSBfaW5zdGFuY2UuaGlnaGxpZ2h0KHRoaXMuaW5uZXJUZXh0LCBzZWFyY2hhYmxlKVxuICAgICAgICByZXR1cm4gdGhpc1xuICAgIH1cbn1cbiIsImNvbnN0IEhpZ2hsaWdodGVyID0gcmVxdWlyZSgnLi9zcmMnKVxubW9kdWxlLmV4cG9ydHMgPSBIaWdobGlnaHRlclxuIiwiY2xhc3MgSGlnaGxpZ2h0ZXIge1xuXG4gICAgLyoqXG4gICAgICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnNcbiAgICAgKiBAcGFyYW0ge09iamVjdH0gb3B0aW9ucy5odG1sX3BhcmFtc1xuICAgICAqIEBwYXJhbSB7U3RyaW5nfSBvcHRpb25zLmh0bWxfdGFnXG4gICAgICogQHBhcmFtIHtTdHJpbmd9IG9wdGlvbnMuY3NzX2NsYXNzZXNcbiAgICAgKiBAcGFyYW0ge1N0cmluZ30gb3B0aW9ucy5yZWdleHBcbiAgICAgKiBAcGFyYW0ge1N0cmluZ30gb3B0aW9ucy5yZWdleHBfZmxhZ3NcbiAgICAgKiBAcGFyYW0ge051bWJlcn0gb3B0aW9ucy53b3JkX21pbl9sZW5ndGhcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihvcHRpb25zID0ge30pIHtcbiAgICAgICAgdGhpcy5zZXRPcHRpb25zKG9wdGlvbnMpXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogSGlnaGxpZ2h0IGEgd29yZCBvciBhIGdyb3VwIG9mIHdvcmRzIGluIGEgc3RyaW5nXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge1N0cmluZ30gY29udGV4dFxuICAgICAqIEBwYXJhbSB7U3RyaW5nfEFycmF5fSBzZWFyY2hhYmxlXG4gICAgICogQHJldHVybnMge1N0cmluZ31cbiAgICAgKi9cbiAgICBoaWdobGlnaHQoY29udGV4dCwgc2VhcmNoYWJsZSkge1xuICAgICAgICBpZiAoIWNvbnRleHQgfHwgIWNvbnRleHQubGVuZ3RoKSByZXR1cm4gJydcblxuICAgICAgICBpZiAoc2VhcmNoYWJsZSAmJiBzZWFyY2hhYmxlLmxlbmd0aCkge1xuICAgICAgICAgICAgbGV0IHBhcnRzID0gdGhpcy5fcHJlcGFyZShzZWFyY2hhYmxlLnRyaW0oKSlcblxuICAgICAgICAgICAgaWYgKCFwYXJ0cy5sZW5ndGgpIHJldHVybiBjb250ZXh0XG5cbiAgICAgICAgICAgIGlmIChwYXJ0cy5sZW5ndGggPT09IDEgfHwgKHBhcnRzLmxlbmd0aCA+IDEgJiYgdGhpcy5fYmVsb25nc1RvQ29udGV4dChzZWFyY2hhYmxlLCBjb250ZXh0KSkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5faGlnaGxpZ2h0V29yZChjb250ZXh0LCBzZWFyY2hhYmxlKVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gcGFydHMucmVkdWNlKHRoaXMuX2hpZ2hsaWdodFdvcmQuYmluZCh0aGlzKSwgY29udGV4dClcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBjb250ZXh0XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogSGlnaGxpZ2h0IGEgd29yZCBvciBhIGdyb3VwIG9mIHdvcmRzIGluIGFuIGFycmF5IG9mIHN0cmluZ1xuICAgICAqXG4gICAgICogQHBhcmFtIHtTdHJpbmdbXX0gY29udGV4dEFycmF5XG4gICAgICogQHBhcmFtIHtTdHJpbmd9IHNlYXJjaGFibGVcbiAgICAgKiBAcmV0dXJucyB7Kn1cbiAgICAgKi9cbiAgICBoaWdobGlnaHRNYW55KGNvbnRleHRBcnJheSwgc2VhcmNoYWJsZSkge1xuICAgICAgICBpZiAoIWNvbnRleHRBcnJheSB8fCAhQXJyYXkuaXNBcnJheShjb250ZXh0QXJyYXkpKVxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdIaWdobGlnaHQ6OmhpZ2hsaWdodE1hbnkgLSBjb250ZXh0QXJyYXkgcGFyYW1ldGVyIG11c3QgYmUgb2YgdHlwZSBhcnJheScpXG5cbiAgICAgICAgcmV0dXJuIGNvbnRleHRBcnJheS5yZWR1Y2UoKGFjYywgY29udGV4dCkgPT4ge1xuICAgICAgICAgICAgYWNjLnB1c2godGhpcy5oaWdobGlnaHQoY29udGV4dCwgc2VhcmNoYWJsZSkpXG4gICAgICAgICAgICByZXR1cm4gYWNjXG4gICAgICAgIH0sIFtdKVxuICAgIH1cblxuICAgIHNldE9wdGlvbnMob3B0aW9ucyA9IHt9KSB7XG4gICAgICAgIHRoaXMuX3BhcmFtcyA9IHtcbiAgICAgICAgICAgIGh0bWxfYXR0cnM6IHt9LFxuICAgICAgICAgICAgaHRtbF90YWc6ICdzcGFuJyxcbiAgICAgICAgICAgIGNzc19jbGFzc2VzOiAnc2VhcmNoX19oaWdobGlnaHQnLFxuICAgICAgICAgICAgcmVnZXhwOiAnX19leHBfXycsXG4gICAgICAgICAgICByZWdleHBfZmxhZ3M6ICdnaScsXG4gICAgICAgICAgICB3b3JkX21pbl9sZW5ndGg6IDIsXG4gICAgICAgICAgICAuLi5vcHRpb25zXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBfcHJlcGFyZShzZWFyY2hhYmxlKSB7XG4gICAgICAgIHJldHVybiAoc2VhcmNoYWJsZS5jb25zdHJ1Y3RvciA9PT0gU3RyaW5nID8gc2VhcmNoYWJsZS5zcGxpdCgnICcpIDogc2VhcmNoYWJsZSlcbiAgICAgICAgICAgIC5maWx0ZXIoKHYsIGksIHMpID0+IHMuaW5kZXhPZih2KSA9PT0gaSlcbiAgICAgICAgICAgIC5maWx0ZXIodiA9PiB2Lmxlbmd0aCA+IHRoaXMuX3BhcmFtcy53b3JkX21pbl9sZW5ndGgpXG4gICAgICAgICAgICAubWFwKGkgPT4gaS50cmltKCkpXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogSGlnaGxpZ2h0IHdvcmQgaW4gYSBzdHJpbmdcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7U3RyaW5nfSBjb250ZXh0XG4gICAgICogQHBhcmFtIHtTdHJpbmd9IHdvcmRcbiAgICAgKiBAcGFyYW0ge051bWJlcn0gaW5kZXhcbiAgICAgKiBAcmV0dXJucyB7c3RyaW5nfVxuICAgICAqIEBwcml2YXRlXG4gICAgICovXG4gICAgX2hpZ2hsaWdodFdvcmQoY29udGV4dCwgd29yZCwgaW5kZXggPSAwKSB7XG4gICAgICAgIHJldHVybiBjb250ZXh0LnJlcGxhY2UoXG4gICAgICAgICAgICB0aGlzLl9idWlsZFJlZ0V4cCh3b3JkKSxcbiAgICAgICAgICAgIHRoaXMuX2J1aWxkVGVtcGxhdGUod29yZCwgaW5kZXgpXG4gICAgICAgIClcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7U3RyaW5nfSBjb250ZXh0XG4gICAgICogQHBhcmFtIHtTdHJpbmd9IHNlYXJjaGFibGVcbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqL1xuICAgIF9iZWxvbmdzVG9Db250ZXh0KHNlYXJjaGFibGUsIGNvbnRleHQpIHtcbiAgICAgICAgcmV0dXJuIChuZXcgUmVnRXhwKHNlYXJjaGFibGUsICdnaScpKS50ZXN0KGNvbnRleHQpXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQHBhcmFtIHtTdHJpbmd9IHdvcmRcbiAgICAgKiBAcmV0dXJucyB7UmVnRXhwfVxuICAgICAqIEBwcml2YXRlXG4gICAgICovXG4gICAgX2J1aWxkUmVnRXhwKHdvcmQpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBSZWdFeHAodGhpcy5fcGFyYW1zLnJlZ2V4cC5yZXBsYWNlKCdfX2V4cF9fJywgd29yZCksIHRoaXMuX3BhcmFtcy5yZWdleHBfZmxhZ3MpXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQHBhcmFtIHtTdHJpbmd9IHdvcmRcbiAgICAgKiBAcGFyYW0ge051bWJlcn0gaW5kZXggd29yZCBpbmRleFxuICAgICAqIEByZXR1cm5zIHtzdHJpbmd9XG4gICAgICogQHByaXZhdGVcbiAgICAgKi9cbiAgICBfYnVpbGRUZW1wbGF0ZSh3b3JkLCBpbmRleCkge1xuICAgICAgICByZXR1cm4gYDwke3RoaXMuX3BhcmFtcy5odG1sX3RhZ30gY2xhc3M9XCIke3RoaXMuX3BhcmFtcy5jc3NfY2xhc3Nlc31cIiAke3RoaXMuX2J1aWxkQXR0cnMoKX0gZGF0YS1oaWdobGlnaHQ9XCJobF8ke2luZGV4ICsgMX1cIj4ke3dvcmR9PC8ke3RoaXMuX3BhcmFtcy5odG1sX3RhZ30+YFxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEJ1aWxkIEhUTUwgYXR0cmlidXRlc1xuICAgICAqXG4gICAgICogQHJldHVybnMge3N0cmluZ31cbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqL1xuICAgIF9idWlsZEF0dHJzKCkge1xuICAgICAgICBpZiAoIU9iamVjdC5rZXlzKHRoaXMuX3BhcmFtcy5odG1sX2F0dHJzKS5sZW5ndGgpIHJldHVybiAnICdcbiAgICAgICAgbGV0IF9hdHRycyA9IFsnJ11cbiAgICAgICAgZm9yIChsZXQgaSBpbiB0aGlzLl9wYXJhbXMuaHRtbF9hdHRycykge1xuICAgICAgICAgICAgaWYgKHRoaXMuX3BhcmFtcy5odG1sX2F0dHJzLmhhc093blByb3BlcnR5KGkpKSB7XG4gICAgICAgICAgICAgICAgX2F0dHJzLnB1c2goYCR7aX09XCIke3RoaXMuX3BhcmFtcy5odG1sX2F0dHJzW2ldfVwiYClcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gX2F0dHJzLmpvaW4oJyAnKVxuICAgIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBIaWdobGlnaHRlclxuIl0sInNvdXJjZVJvb3QiOiIifQ==